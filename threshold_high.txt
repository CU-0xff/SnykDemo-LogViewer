{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "file",
                  "module",
                  "xdl"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/zhoukekestar/modules/commit/b6c2fc78dc8679080b982124a24771f1466b2fb2?diff=split#diff-a8575a14457a013bf8a0fec74374a923L20",
                    "lines": [
                      {
                        "line": "// Image request.",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/upload/:id', function(req, res) {",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.sendFile(dir + '/' + req.params.id);",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  // Test ok on winodws. Not sure that linux will be work ok.",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.sendFile((dir + '/' + req.params.id).replace(/\\//g, '\\\\\\\\'));",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 23,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/FredrikNoren/ungit/commit/51870548599790dd125f02916461e04f6d29c53f?diff=split#diff-71e7385fb3d187340c7741bf6d4f82ffL335",
                    "lines": [
                      {
                        "line": "});",
                        "lineNumber": 332,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/api/fs/listDirectories', ensureAuthenticated, (req, res) => {",
                        "lineNumber": 334,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const dir = req.query.term.trim();",
                        "lineNumber": 335,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const dir = path.resolve(req.query.term.trim()).replace(\"/~\", \"\");",
                        "lineNumber": 335,
                        "lineChange": "added"
                      },
                      {
                        "line": "  fs.readdirAsync(dir).then(filenames => {",
                        "lineNumber": 337,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return filenames.map((filename) => path.join(dir, filename));",
                        "lineNumber": 338,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }).filter((filepath) => {",
                        "lineNumber": 339,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/shime/livedown/commit/9862f810655d8e40f8e235a5ef47db332ad29be4?diff=split#diff-78c12f5adc1848d13b1c6f07055d996eL72",
                    "lines": [
                      {
                        "line": "app.use(parser.json())",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(express.static(path.join(__dirname, 'public')))",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function(req, res, next){",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (new RegExp('.' + ImageExtesions.join('|') + \"$\").test(req.path)){",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "    res.sendFile(path.join(filePath, '../' + req.path))",
                        "lineNumber": 73,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    res.sendFile(path.join(filePath, '../' + req.path), sendFileOpts)",
                        "lineNumber": 79,
                        "lineChange": "added"
                      },
                      {
                        "line": "  } else {",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "    next()",
                        "lineNumber": 81,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* Add checking output files to prerender tests",
                  "cleaning out unused modules;",
                  "* [xdl][exp] Add `exp test` command to let us test xdl schemas locally easily"
                ],
                "precision": "very-high",
                "repoDatasetSize": 595,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Hackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n### Best practices for prevention\n- Avoid passing user-entered parameters directly to the SQL server.\n- When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n- Use strong typing for all parameters so unexpected user data will be rejected.\n- Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; -` and spaces. Use a vendor-supplied escaping routine if possible.\n- Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n- Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "tests",
                  "database",
                  "adapter"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mozilla/napkin/commit/b48aa5071e69bfe5fb22a7955514ff1fa0d9ca75?diff=split#diff-8c3093706848cad6938fd91248441eafL53",
                    "lines": [
                      {
                        "line": " * Returns: A screen object if found, error if not found",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "exports.get = function(req, db, identifier, callback) {",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "  db.get('project:' + req.params.id + ':screen:' + identifier, function(err, screen) {",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  crud.get(req, 'project:' + req.params.id + ':screen:' + identifier, db, function(err, screen) {",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (err) {",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "      return callback(err);",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/usecanvas/livedb-postgresql/commit/fb13af89f39ca2112089378385c2481675b11428?diff=split#diff-168726dbe96b3ce427e7fedce31bb0bcL86",
                    "lines": [
                      {
                        "line": "var dataColumn = this.dataColumn;",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "this.db(this.table)",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "  .where(where)",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "  .select(dataColumn)",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "  .limit(1)",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "  .exec(function onResult(err, rows) {",
                        "lineNumber": 89,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  .asCallback(function onResult(err, rows) {",
                        "lineNumber": 89,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (err) return cb(err, null);",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cb(null, rows.length ? rows[0][dataColumn] : null);",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "  });",
                        "lineNumber": 92,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ireapps/census/commit/7626bcc9577e279dd4f91b86760110347cb6f846?diff=split#diff-5933928215d2295a1a08721bd88a70f2L95",
                    "lines": [
                      {
                        "line": "success: function(states) {",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "    _.each(states, function(state) {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "        query.mappings.states.push([state, STATES[state]]);",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Remove this section to enable \"go button\" prompt:",
                        "lineNumber": 220,
                        "lineChange": "none"
                      },
                      {
                        "line": "var q = window.query;",
                        "lineNumber": 221,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (query.get('summarylevel') && query.get(query.get(\"summarylevel\")))",
                        "lineNumber": 215,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (this.get('summarylevel') && this.get(this.get(\"summarylevel\")))",
                        "lineNumber": 222,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // The item we just selected is of the same type as our",
                        "lineNumber": 223,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // target datatype. We just picked the value we wanted.",
                        "lineNumber": 224,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* Additional tests",
                  "* Added more indepth error handling to connections on all database adapters.",
                  "* Adapt deletion + fix dependencies errors from yarn control"
                ],
                "precision": "very-high",
                "repoDatasetSize": 255,
                "cwe": [
                  "CWE-89"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into fs.readFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[fs.readFile](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 17,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e9c0de3757323577703979b90b2244e022a41474c8bae674fb1bc8a58d994b13",
            "1": "c3f8dfad.4773f344.607187b5.d7919eeb.ef9f7d82.8020cfdf.df7e59ba.0d398d22.c3f8dfad.4773f344.607187b5.c559ebce.3a08f0d2.8020cfdf.83265159.0d398d22"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 17,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 850,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into get, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[get](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "startColumn": 20,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "90e45b3929624a1afa5d50d5e2a4b6d662d6c79e155f7b0bf66b7dd7fac306e5",
            "1": "a4fec5d2.4773f344.607187b5.d7919eeb.79a7d027.8020cfdf.df7e59ba.deea270c.29386b0b.4773f344.607187b5.c559ebce.79a7d027.8020cfdf.83265159.60d0a2aa"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 14,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 14,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 7,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 850,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 4,
            "isSupported": true,
            "lang": "JavaScript"
          },
          {
            "files": 4,
            "isSupported": true,
            "lang": "EJS"
          }
        ]
      }
    }
  ]
}
